{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://nest-crud-typeorm-client/lib/crud-request/types/request-query.types.ts","ng://nest-crud-typeorm-client/lib/crud-request/exceptions/request-query.exception.ts","ng://nest-crud-typeorm-client/lib/util/obj.util.ts","ng://nest-crud-typeorm-client/lib/util/checks.util.ts","ng://nest-crud-typeorm-client/lib/crud-request/request-query.validator.ts","ng://nest-crud-typeorm-client/lib/crud-request/request-query.builder.ts","ng://nest-crud-typeorm-client/lib/crud-request/request-query.parser.ts","ng://nest-crud-typeorm-client/lib/crud-base.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","CondOperator","RequestQueryException","msg","_super","__","constructor","create","__extends","Error","objKeys","val","keys","isUndefined","isNull","isNil","isString","hasLength","isStringFull","isArrayFull","isArray","isArrayStrings","every","v","isObject","isNumber","Number","isNaN","isFinite","isEqual","eq","isBoolean","isDateString","test","isDate","Date","isValue","hasValue","comparisonOperatorsList","map","sortOrdersList","comparisonOperatorsListStr","join","sortOrdersListStr","validateCondition","cond","field","operator","includes","validateComparisonOperator","validateJoin","select","validateSort","sort","order","validateNumeric","num","RequestQueryBuilder","paramNames","queryObject","setParamNames","setOptions","options","_options","paramNamesMap","getOptions","params","qb","createFromParams","defineProperty","_this","forEach","key","name","query","encode","search","filter","undefined","or","queryString","stringify","fields","validateFields","delimStr","JSON","setFilter","f","setCondition","setOr","setJoin","j","param","checkQueryObjectParam","addJoin","sortBy","addSortBy","setLimit","setNumeric","setOffset","setPage","resetCache","delim","ds","limit","offset","page","defaults","cache","RequestQueryParser","paramsFilter","authPersist","getParsed","parseQuery","_query","_paramNames","searchData","getParamNames","parseSearchQueryParam","parseQueryParam","conditionParser","bind","fieldsParser","joinParser","sortParser","numericParser","parseParams","_params","_paramsOptions","paramParser","setAuthPersist","persist","convertFilterToSearch","isEmptyValue","isnull","notnull","_b","type","some","getParamValues","parser","reduce","a","parseValue","parsed","parse","toLocaleString","useGrouping","ignored","parseValues","vals","data","split","_","condition","option","disabled","validateParamOption","str","validateUUID","CrudBaseService","http","getPagination","builder","get","getBaseUrl","getParamsFromQuery","getMany","getOne","url","getOneUrl","body","post","headers","Content-Type","createMany","bulk","put","patch","delete","HttpParams","fromString","getQuery","apiUrl","entity","getOwnPropertyNames","arr"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export type QueryFields = string[];\n\nexport type QueryFilter = {\n  field: string;\n  operator: ComparisonOperator;\n  value?: any;\n};\n\nexport type QueryFilterArr = [string, ComparisonOperator, any?];\n\nexport type QueryJoin = {\n  field: string;\n  select?: QueryFields;\n};\n\nexport type QueryJoinArr = [string, QueryFields?];\n\nexport type QuerySort = {\n  field: string;\n  order: QuerySortOperator;\n};\n\nexport type QuerySortArr = [string, QuerySortOperator];\n\nexport type QuerySortOperator = 'ASC' | 'DESC';\n\ntype DeprecatedCondOperator =\n  | 'eq'\n  | 'ne'\n  | 'gt'\n  | 'lt'\n  | 'gte'\n  | 'lte'\n  | 'starts'\n  | 'ends'\n  | 'cont'\n  | 'excl'\n  | 'in'\n  | 'notin'\n  | 'isnull'\n  | 'notnull'\n  | 'between';\n\nexport enum CondOperator {\n  EQUALS = '$eq',\n  NOT_EQUALS = '$ne',\n  GREATER_THAN = '$gt',\n  LOWER_THAN = '$lt',\n  GREATER_THAN_EQUALS = '$gte',\n  LOWER_THAN_EQUALS = '$lte',\n  STARTS = '$starts',\n  ENDS = '$ends',\n  CONTAINS = '$cont',\n  EXCLUDES = '$excl',\n  IN = '$in',\n  NOT_IN = '$notin',\n  IS_NULL = '$isnull',\n  NOT_NULL = '$notnull',\n  BETWEEN = '$between',\n  EQUALS_LOW = '$eqL',\n  NOT_EQUALS_LOW = '$neL',\n  STARTS_LOW = '$startsL',\n  ENDS_LOW = '$endsL',\n  CONTAINS_LOW = '$contL',\n  EXCLUDES_LOW = '$exclL',\n  IN_LOW = '$inL',\n  NOT_IN_LOW = '$notinL',\n}\n\nexport type ComparisonOperator = DeprecatedCondOperator | keyof SFieldOperator;\n\n// new search\nexport type SPrimitivesVal = string | number | boolean;\n\nexport type SFiledValues = SPrimitivesVal | Array<SPrimitivesVal>;\n\nexport type SFieldOperator = {\n  $eq?: SFiledValues;\n  $ne?: SFiledValues;\n  $gt?: SFiledValues;\n  $lt?: SFiledValues;\n  $gte?: SFiledValues;\n  $lte?: SFiledValues;\n  $starts?: SFiledValues;\n  $ends?: SFiledValues;\n  $cont?: SFiledValues;\n  $excl?: SFiledValues;\n  $in?: SFiledValues;\n  $notin?: SFiledValues;\n  $between?: SFiledValues;\n  $isnull?: SFiledValues;\n  $notnull?: SFiledValues;\n  $eqL?: SFiledValues;\n  $neL?: SFiledValues;\n  $startsL?: SFiledValues;\n  $endsL?: SFiledValues;\n  $contL?: SFiledValues;\n  $exclL?: SFiledValues;\n  $inL?: SFiledValues;\n  $notinL?: SFiledValues;\n  $or?: SFieldOperator;\n  $and?: never;\n};\n\nexport type SField = SPrimitivesVal | SFieldOperator;\n\nexport type SFields = {\n  [key: string]: SField | Array<SFields | SConditionAND> | undefined;\n  $or?: Array<SFields | SConditionAND>;\n  $and?: never;\n};\n\nexport type SConditionAND = {\n  $and?: Array<SFields | SConditionAND>;\n  $or?: never;\n};\n\nexport type SConditionKey = '$and' | '$or';\n\nexport type SCondition = SFields | SConditionAND;\n","export class RequestQueryException extends Error {\n  constructor(msg: string) {\n    super(msg);\n  }\n}\n","export const objKeys = (val: any): string[] => Object.keys(val);\nexport const getOwnPropNames = (val: any): string[] => Object.getOwnPropertyNames(val);\n","import { objKeys } from './obj.util';\n\nexport const isUndefined = (val: any): boolean => typeof val === 'undefined';\nexport const isNull = (val: any): boolean => val === null;\nexport const isNil = (val: any): boolean => isUndefined(val) || isNull(val);\nexport const isString = (val: any): boolean => typeof val === 'string';\nexport const hasLength = (val: any): boolean => val.length > 0;\nexport const isStringFull = (val: any): boolean => isString(val) && hasLength(val);\nexport const isArrayFull = (val: any): boolean => Array.isArray(val) && hasLength(val);\nexport const isArrayStrings = (val: any): boolean =>\n  isArrayFull(val) && (val as string[]).every((v) => isStringFull(v));\nexport const isObject = (val: any): boolean => typeof val === 'object' && !isNull(val);\nexport const isObjectFull = (val: any) => isObject(val) && hasLength(objKeys(val));\nexport const isNumber = (val: any): boolean =>\n  typeof val === 'number' && !Number.isNaN(val) && Number.isFinite(val);\nexport const isEqual = (val: any, eq: any): boolean => val === eq;\nexport const isFalse = (val: any): boolean => val === false;\nexport const isTrue = (val: any): boolean => val === true;\nexport const isIn = (val: any, arr: any[] = []): boolean =>\n  arr.some((o) => isEqual(val, o));\nexport const isBoolean = (val: any): boolean => typeof val === 'boolean';\nexport const isNumeric = (val: any): boolean => /^[+-]?([0-9]*[.])?[0-9]+$/.test(val);\nexport const isDateString = (val: any): boolean =>\n  isStringFull(val) &&\n  /^\\d{4}-[01]\\d-[0-3]\\d(?:T[0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?(?:Z|[-+][0-2]\\d(?::?[0-5]\\d)?)?)?$/g.test(\n    val,\n  );\nexport const isDate = (val: any): val is Date => val instanceof Date;\nexport const isValue = (val: any): boolean =>\n  isStringFull(val) || isNumber(val) || isBoolean(val) || isDate(val);\nexport const hasValue = (val: any): boolean =>\n  isArrayFull(val) ? (val as any[]).every((o) => isValue(o)) : isValue(val);\nexport const isFunction = (val: any): boolean => typeof val === 'function';\n","import {\n  isUndefined,\n  isArrayStrings,\n  isStringFull,\n  isObject,\n  isEqual,\n  isNumber,\n  isNil,\n  objKeys,\n} from '../util';\n\nimport { RequestQueryException } from './exceptions';\nimport { ParamsOptions, ParamOption } from './interfaces';\nimport {\n  QueryFields,\n  QueryFilter,\n  ComparisonOperator,\n  QueryJoin,\n  QuerySort,\n  CondOperator,\n} from './types';\n\nexport const deprecatedComparisonOperatorsList = [\n  'eq',\n  'ne',\n  'gt',\n  'lt',\n  'gte',\n  'lte',\n  'starts',\n  'ends',\n  'cont',\n  'excl',\n  'in',\n  'notin',\n  'isnull',\n  'notnull',\n  'between',\n];\nexport const comparisonOperatorsList = Object.assign(\n  deprecatedComparisonOperatorsList,\n  objKeys(CondOperator).map((n) => CondOperator[n])\n);\n\nexport const sortOrdersList = ['ASC', 'DESC'];\n\nconst comparisonOperatorsListStr = comparisonOperatorsList.join();\nconst sortOrdersListStr = sortOrdersList.join();\n\nexport function validateFields(fields: QueryFields): void {\n  if (!isArrayStrings(fields)) {\n    throw new RequestQueryException(\n      'Invalid fields. Array of strings expected'\n    );\n  }\n}\n\nexport function validateCondition(\n  val: QueryFilter,\n  cond: 'filter' | 'or' | 'search'\n): void {\n  if (!isObject(val) || !isStringFull(val.field)) {\n    throw new RequestQueryException(\n      `Invalid field type in ${cond} condition. String expected`\n    );\n  }\n  validateComparisonOperator(val.operator);\n}\n\nexport function validateComparisonOperator(operator: ComparisonOperator): void {\n  if (!comparisonOperatorsList.includes(operator)) {\n    throw new RequestQueryException(\n      `Invalid comparison operator. ${comparisonOperatorsListStr} expected`\n    );\n  }\n}\n\nexport function validateJoin(join: QueryJoin): void {\n  if (!isObject(join) || !isStringFull(join.field)) {\n    throw new RequestQueryException('Invalid join field. String expected');\n  }\n  if (!isUndefined(join.select) && !isArrayStrings(join.select)) {\n    throw new RequestQueryException(\n      'Invalid join select. Array of strings expected'\n    );\n  }\n}\n\nexport function validateSort(sort: QuerySort): void {\n  if (!isObject(sort) || !isStringFull(sort.field)) {\n    throw new RequestQueryException('Invalid sort field. String expected');\n  }\n  if (\n    !isEqual(sort.order, sortOrdersList[0]) &&\n    !isEqual(sort.order, sortOrdersList[1])\n  ) {\n    throw new RequestQueryException(\n      `Invalid sort order. ${sortOrdersListStr} expected`\n    );\n  }\n}\n\nexport function validateNumeric(\n  val: number,\n  num: 'limit' | 'offset' | 'page' | 'cache' | string\n): void {\n  if (!isNumber(val)) {\n    throw new RequestQueryException(`Invalid ${num}. Number expected`);\n  }\n}\n\nexport function validateParamOption(options: ParamsOptions, name: string) {\n  if (!isObject(options)) {\n    throw new RequestQueryException(\n      `Invalid param ${name}. Invalid crud options`\n    );\n  }\n  const option = options[name];\n  if (option && option.disabled) {\n    return;\n  }\n  if (!isObject(option) || isNil(option.field) || isNil(option.type)) {\n    throw new RequestQueryException(`Invalid param option in Crud`);\n  }\n}\n\nexport function validateUUID(str: string, name: string) {\n  const uuid = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n  const uuidV4 = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n  if (!uuidV4.test(str) && !uuid.test(str)) {\n    throw new RequestQueryException(\n      `Invalid param ${name}. UUID string expected`\n    );\n  }\n}\n","import {\n  hasValue,\n  isObject,\n  isString,\n  isArrayFull,\n  isNil,\n  isUndefined,\n} from '../util';\nimport { stringify } from 'qs';\n\nimport { RequestQueryBuilderOptions, CreateQueryParams } from './interfaces';\nimport {\n  validateCondition,\n  validateFields,\n  validateJoin,\n  validateNumeric,\n  validateSort,\n} from './request-query.validator';\nimport {\n  QueryFields,\n  QueryFilter,\n  QueryFilterArr,\n  QueryJoin,\n  QueryJoinArr,\n  QuerySort,\n  QuerySortArr,\n  SCondition,\n} from './types';\n\n// tslint:disable:variable-name ban-types\nexport class RequestQueryBuilder {\n  constructor() {\n    this.setParamNames();\n  }\n\n  private static _options: RequestQueryBuilderOptions = {\n    delim: '||',\n    delimStr: ',',\n    paramNamesMap: {\n      fields: ['fields', 'select'],\n      search: 's',\n      filter: 'filter',\n      or: 'or',\n      join: 'join',\n      sort: 'sort',\n      limit: ['limit', 'per_page'],\n      offset: 'offset',\n      page: 'page',\n      cache: 'cache',\n    },\n  };\n  private paramNames: {\n    [key in keyof RequestQueryBuilderOptions['paramNamesMap']]: string;\n  } = {};\n  public queryObject: { [key: string]: any } = {};\n  public queryString: string;\n\n  static setOptions(options: RequestQueryBuilderOptions) {\n    RequestQueryBuilder._options = {\n      ...RequestQueryBuilder._options,\n      ...options,\n      paramNamesMap: {\n        ...RequestQueryBuilder._options.paramNamesMap,\n        ...(options.paramNamesMap ? options.paramNamesMap : {}),\n      },\n    };\n  }\n\n  static getOptions(): RequestQueryBuilderOptions {\n    return RequestQueryBuilder._options;\n  }\n\n  static create(params?: CreateQueryParams): RequestQueryBuilder {\n    const qb = new RequestQueryBuilder();\n    return isObject(params) ? qb.createFromParams(params) : qb;\n  }\n\n  get options(): RequestQueryBuilderOptions {\n    return RequestQueryBuilder._options;\n  }\n\n  setParamNames() {\n    Object.keys(RequestQueryBuilder._options.paramNamesMap).forEach((key) => {\n      const name = RequestQueryBuilder._options.paramNamesMap[key];\n      this.paramNames[key] = isString(name) ? (name as string) : (name[0] as string);\n    });\n  }\n\n  query(encode = true): string {\n    if (this.queryObject[this.paramNames.search]) {\n      this.queryObject[this.paramNames.filter] = undefined;\n      this.queryObject[this.paramNames.or] = undefined;\n    }\n    this.queryString = stringify(this.queryObject, { encode });\n    return this.queryString;\n  }\n\n  select(fields: QueryFields): this {\n    if (isArrayFull(fields)) {\n      validateFields(fields);\n      this.queryObject[this.paramNames.fields] = fields.join(this.options.delimStr);\n    }\n    return this;\n  }\n\n  search(s: SCondition) {\n    if (!isNil(s) && isObject(s)) {\n      this.queryObject[this.paramNames.search] = JSON.stringify(s);\n    }\n    return this;\n  }\n\n  setFilter(f: QueryFilter | QueryFilterArr | Array<QueryFilter | QueryFilterArr>): this {\n    this.setCondition(f, 'filter');\n    return this;\n  }\n\n  setOr(f: QueryFilter | QueryFilterArr | Array<QueryFilter | QueryFilterArr>): this {\n    this.setCondition(f, 'or');\n    return this;\n  }\n\n  setJoin(j: QueryJoin | QueryJoinArr | Array<QueryJoin | QueryJoinArr>): this {\n    if (!isNil(j)) {\n      const param = this.checkQueryObjectParam('join', []);\n      this.queryObject[param] = [\n        ...this.queryObject[param],\n        ...(Array.isArray(j) && !isString(j[0])\n          ? (j as Array<QueryJoin | QueryJoinArr>).map((o) => this.addJoin(o))\n          : [this.addJoin(j as QueryJoin | QueryJoinArr)]),\n      ];\n    }\n    return this;\n  }\n\n  sortBy(s: QuerySort | QuerySortArr | Array<QuerySort | QuerySortArr>): this {\n    if (!isNil(s)) {\n      const param = this.checkQueryObjectParam('sort', []);\n      this.queryObject[param] = [\n        ...this.queryObject[param],\n        ...(Array.isArray(s) && !isString(s[0])\n          ? (s as Array<QuerySort | QuerySortArr>).map((o) => this.addSortBy(o))\n          : [this.addSortBy(s as QuerySort | QuerySortArr)]),\n      ];\n    }\n    return this;\n  }\n\n  setLimit(n: number): this {\n    this.setNumeric(n, 'limit');\n    return this;\n  }\n\n  setOffset(n: number): this {\n    this.setNumeric(n, 'offset');\n    return this;\n  }\n\n  setPage(n: number): this {\n    this.setNumeric(n, 'page');\n    return this;\n  }\n\n  resetCache(): this {\n    this.setNumeric(0, 'cache');\n    return this;\n  }\n\n  cond(\n    f: QueryFilter | QueryFilterArr,\n    cond: 'filter' | 'or' | 'search' = 'search',\n  ): string {\n    const filter = Array.isArray(f) ? { field: f[0], operator: f[1], value: f[2] } : f;\n    validateCondition(filter, cond);\n    const d = this.options.delim;\n\n    return (\n      filter.field +\n      d +\n      filter.operator +\n      (hasValue(filter.value) ? d + filter.value : '')\n    );\n  }\n\n  private addJoin(j: QueryJoin | QueryJoinArr): string {\n    const join = Array.isArray(j) ? { field: j[0], select: j[1] } : j;\n    validateJoin(join);\n    const d = this.options.delim;\n    const ds = this.options.delimStr;\n\n    return join.field + (isArrayFull(join.select) ? d + join.select.join(ds) : '');\n  }\n\n  private addSortBy(s: QuerySort | QuerySortArr): string {\n    const sort = Array.isArray(s) ? { field: s[0], order: s[1] } : s;\n    validateSort(sort);\n    const ds = this.options.delimStr;\n\n    return sort.field + ds + sort.order;\n  }\n\n  private createFromParams(params: CreateQueryParams): this {\n    this.select(params.fields);\n    this.search(params.search);\n    this.setFilter(params.filter);\n    this.setOr(params.or);\n    this.setJoin(params.join);\n    this.setLimit(params.limit);\n    this.setOffset(params.offset);\n    this.setPage(params.page);\n    this.sortBy(params.sort);\n    if (params.resetCache) {\n      this.resetCache();\n    }\n    return this;\n  }\n\n  private checkQueryObjectParam(\n    cond: keyof RequestQueryBuilderOptions['paramNamesMap'],\n    defaults: any,\n  ): string {\n    const param = this.paramNames[cond];\n    if (isNil(this.queryObject[param]) && !isUndefined(defaults)) {\n      this.queryObject[param] = defaults;\n    }\n    return param;\n  }\n\n  private setCondition(\n    f: QueryFilter | QueryFilterArr | Array<QueryFilter | QueryFilterArr>,\n    cond: 'filter' | 'or',\n  ): void {\n    if (!isNil(f)) {\n      const param = this.checkQueryObjectParam(cond, []);\n      this.queryObject[param] = [\n        ...this.queryObject[param],\n        ...(Array.isArray(f) && !isString(f[0])\n          ? (f as Array<QueryFilter | QueryFilterArr>).map((o) => this.cond(o, cond))\n          : [this.cond(f as QueryFilter | QueryFilterArr, cond)]),\n      ];\n    }\n  }\n\n  private setNumeric(n: number, cond: 'limit' | 'offset' | 'page' | 'cache'): void {\n    if (!isNil(n)) {\n      validateNumeric(n, cond);\n      this.queryObject[this.paramNames[cond]] = n;\n    }\n  }\n}","import {\n  hasLength,\n  hasValue,\n  isString,\n  isArrayFull,\n  isDate,\n  isDateString,\n  isObject,\n  isStringFull,\n  objKeys,\n  isNil,\n  ObjectLiteral,\n} from '../util';\n\nimport { RequestQueryException } from './exceptions';\nimport {\n  ParamsOptions,\n  ParsedRequestParams,\n  RequestQueryBuilderOptions,\n} from './interfaces';\nimport { RequestQueryBuilder } from './request-query.builder';\nimport {\n  validateCondition,\n  validateJoin,\n  validateNumeric,\n  validateParamOption,\n  validateSort,\n  validateUUID,\n} from './request-query.validator';\nimport {\n  ComparisonOperator,\n  QueryFields,\n  QueryFilter,\n  QueryJoin,\n  QuerySort,\n  SCondition,\n  SConditionAND,\n  SFields,\n} from './types';\n\n// tslint:disable:variable-name ban-types\nexport class RequestQueryParser implements ParsedRequestParams {\n  public fields: QueryFields = [];\n  public paramsFilter: QueryFilter[] = [];\n  public authPersist: ObjectLiteral = undefined;\n  public search: SCondition;\n  public filter: QueryFilter[] = [];\n  public or: QueryFilter[] = [];\n  public join: QueryJoin[] = [];\n  public sort: QuerySort[] = [];\n  public limit: number;\n  public offset: number;\n  public page: number;\n  public cache: number;\n\n  private _params: any;\n  private _query: any;\n  private _paramNames: string[];\n  private _paramsOptions: ParamsOptions;\n\n  private get _options(): RequestQueryBuilderOptions {\n    return RequestQueryBuilder.getOptions();\n  }\n\n  static create(): RequestQueryParser {\n    return new RequestQueryParser();\n  }\n\n  getParsed(): ParsedRequestParams {\n    return {\n      fields: this.fields,\n      paramsFilter: this.paramsFilter,\n      authPersist: this.authPersist,\n      search: this.search,\n      filter: this.filter,\n      or: this.or,\n      join: this.join,\n      sort: this.sort,\n      limit: this.limit,\n      offset: this.offset,\n      page: this.page,\n      cache: this.cache,\n    };\n  }\n\n  parseQuery(query: any): this {\n    if (isObject(query)) {\n      const paramNames = objKeys(query);\n\n      if (hasLength(paramNames)) {\n        this._query = query;\n        this._paramNames = paramNames;\n        let searchData = this._query[this.getParamNames('search')[0]];\n\n        this.search = this.parseSearchQueryParam(searchData) as any;\n        if (isNil(this.search)) {\n          this.filter = this.parseQueryParam(\n            'filter',\n            this.conditionParser.bind(this, 'filter'),\n          );\n          this.or = this.parseQueryParam('or', this.conditionParser.bind(this, 'or'));\n        }\n        this.fields =\n          this.parseQueryParam('fields', this.fieldsParser.bind(this))[0] || [];\n        this.join = this.parseQueryParam('join', this.joinParser.bind(this));\n        this.sort = this.parseQueryParam('sort', this.sortParser.bind(this));\n        this.limit = this.parseQueryParam(\n          'limit',\n          this.numericParser.bind(this, 'limit'),\n        )[0];\n        this.offset = this.parseQueryParam(\n          'offset',\n          this.numericParser.bind(this, 'offset'),\n        )[0];\n        this.page = this.parseQueryParam(\n          'page',\n          this.numericParser.bind(this, 'page'),\n        )[0];\n        this.cache = this.parseQueryParam(\n          'cache',\n          this.numericParser.bind(this, 'cache'),\n        )[0];\n      }\n    }\n\n    return this;\n  }\n\n  parseParams(params: any, options: ParamsOptions): this {\n    if (isObject(params)) {\n      const paramNames = objKeys(params);\n\n      if (hasLength(paramNames)) {\n        this._params = params;\n        this._paramsOptions = options;\n        this.paramsFilter = paramNames\n          .map((name) => this.paramParser(name))\n          .filter((filter) => filter);\n      }\n    }\n\n    return this;\n  }\n\n  setAuthPersist(persist: ObjectLiteral = {}) {\n    this.authPersist = persist || /* istanbul ignore next */ {};\n  }\n\n  convertFilterToSearch(filter: QueryFilter): SFields | SConditionAND {\n    const isEmptyValue = {\n      isnull: true,\n      notnull: true,\n    };\n\n    return filter\n      ? {\n          [filter.field]: {\n            [filter.operator]: isEmptyValue[filter.operator]\n              ? isEmptyValue[filter.operator]\n              : filter.value,\n          },\n        }\n      : /* istanbul ignore next */ {};\n  }\n\n  private getParamNames(\n    type: keyof RequestQueryBuilderOptions['paramNamesMap'],\n  ): string[] {\n    return this._paramNames.filter((p) => {\n      const name = this._options.paramNamesMap[type];\n      return isString(name) ? name === p : (name as string[]).some((m) => m === p);\n    });\n  }\n\n  private getParamValues(value: string | string[], parser: Function): string[] {\n    if (isStringFull(value)) {\n      return [parser.call(this, value)];\n    }\n\n    if (isArrayFull(value)) {\n      return (value as string[]).map((val) => parser(val));\n    }\n\n    return [];\n  }\n\n  private parseQueryParam(\n    type: keyof RequestQueryBuilderOptions['paramNamesMap'],\n    parser: Function,\n  ) {\n    const param = this.getParamNames(type);\n\n    if (isArrayFull(param)) {\n      return param.reduce(\n        (a, name) => Object.assign(a,this.getParamValues(this._query[name], parser)),\n        [],\n      );\n    }\n\n    return [];\n  }\n\n  private parseValue(val: any) {\n    try {\n      const parsed = JSON.parse(val);\n\n      if (!isDate(parsed) && isObject(parsed)) {\n        // throw new Error('Don\\'t support object now');\n        return val;\n      } else if (\n        typeof parsed === 'number' &&\n        parsed.toLocaleString('fullwide', { useGrouping: false }) !== val\n      ) {\n        // JS cannot handle big numbers. Leave it as a string to prevent data loss\n        return val;\n      }\n\n      return parsed;\n    } catch (ignored) {\n      if (isDateString(val)) {\n        return new Date(val);\n      }\n\n      return val;\n    }\n  }\n\n  private parseValues(vals: any) {\n    if (isArrayFull(vals)) {\n      return vals.map((v: any) => this.parseValue(v));\n    } else {\n      return this.parseValue(vals);\n    }\n  }\n\n  private fieldsParser(data: string): QueryFields {\n    return data.split(this._options.delimStr);\n  }\n\n  private parseSearchQueryParam(d: any): SCondition {\n    try {\n      if (isNil(d)) {\n        return undefined;\n      }\n\n      const data = JSON.parse(d);\n\n      if (!isObject(data)) {\n        throw new Error();\n      }\n\n      return data;\n    } catch (_) {\n      throw new RequestQueryException('Invalid search param. JSON expected');\n    }\n  }\n\n  private conditionParser(cond: 'filter' | 'or' | 'search', data: string): QueryFilter {\n    const isArrayValue = [\n      'in',\n      'notin',\n      'between',\n      '$in',\n      '$notin',\n      '$between',\n      '$inL',\n      '$notinL',\n    ];\n    const isEmptyValue = ['isnull', 'notnull', '$isnull', '$notnull'];\n    const param = data.split(this._options.delim);\n    const field = param[0];\n    const operator = param[1] as ComparisonOperator;\n    let value = param[2] || '';\n\n    if (isArrayValue.some((name) => name === operator)) {\n      value = value.split(this._options.delimStr) as any;\n    }\n\n    value = this.parseValues(value);\n\n    if (!isEmptyValue.some((name) => name === operator) && !hasValue(value)) {\n      throw new RequestQueryException(`Invalid ${cond} value`);\n    }\n\n    const condition: QueryFilter = { field, operator, value };\n    validateCondition(condition, cond);\n\n    return condition;\n  }\n\n  private joinParser(data: string): QueryJoin {\n    const param = data.split(this._options.delim);\n    const join: QueryJoin = {\n      field: param[0],\n      select: isStringFull(param[1]) ? param[1].split(this._options.delimStr) : undefined,\n    };\n    validateJoin(join);\n\n    return join;\n  }\n\n  private sortParser(data: string): QuerySort {\n    const param = data.split(this._options.delimStr);\n    const sort: QuerySort = {\n      field: param[0],\n      order: param[1] as any,\n    };\n    validateSort(sort);\n\n    return sort;\n  }\n\n  private numericParser(\n    num: 'limit' | 'offset' | 'page' | 'cache',\n    data: string,\n  ): number {\n    const val = this.parseValue(data);\n    validateNumeric(val, num);\n\n    return val;\n  }\n\n  private paramParser(name: string): QueryFilter {\n    validateParamOption(this._paramsOptions, name);\n    const option = this._paramsOptions[name];\n\n    if (option.disabled) {\n      return undefined;\n    }\n\n    let value = this._params[name];\n\n    switch (option.type) {\n      case 'number':\n        value = this.parseValue(value);\n        validateNumeric(value, `param ${name}`);\n        break;\n      case 'uuid':\n        validateUUID(value, name);\n        break;\n      default:\n        break;\n    }\n\n    return { field: option.field, operator: '$eq', value };\n  }\n}\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CreateQueryParams, RequestQueryBuilder } from './crud-request';\r\n\r\nexport interface CrudBaseOptions {\r\n  entity: string;\r\n  apiUrl: string;\r\n}\r\n\r\nexport interface ResponsePagination<T> {\r\n  data: Array<T>;\r\n  count: number;\r\n  total: number;\r\n  page: number;\r\n  pageCount: number;\r\n}\r\n\r\nexport abstract class CrudBaseService<T> {\r\n  protected options: CrudBaseOptions;\r\n  constructor(options: CrudBaseOptions, protected http: HttpClient) {\r\n    this.options = options;\r\n  }\r\n\r\n  getPagination(\r\n    limit: number,\r\n    page: number,\r\n    builder?: RequestQueryBuilder | CreateQueryParams\r\n  ): Observable<ResponsePagination<T>> {\r\n    if (!builder) {\r\n      builder = RequestQueryBuilder.create();\r\n    } else if (!(builder instanceof RequestQueryBuilder)) {\r\n      builder = RequestQueryBuilder.create(builder);\r\n    }\r\n    builder.setLimit(limit);\r\n    builder.setPage(page);\r\n    return this.http.get<ResponsePagination<T>>(this.getBaseUrl(), {\r\n      params: this.getParamsFromQuery(builder),\r\n    });\r\n  }\r\n\r\n  getMany(builder?: RequestQueryBuilder | CreateQueryParams): Observable<T[]> {\r\n    return this.http.get<T[]>(this.getBaseUrl(), {\r\n      params: this.getParamsFromQuery(builder),\r\n    });\r\n  }\r\n\r\n  getOne(\r\n    value: number | string | boolean,\r\n    builder?: RequestQueryBuilder | CreateQueryParams\r\n  ): Observable<T> {\r\n    const url = this.getOneUrl(value);\r\n    return this.http.get<T>(url, {\r\n      params: this.getParamsFromQuery(builder),\r\n    });\r\n  }\r\n\r\n  create(body: T): Observable<T> {\r\n    return this.http.post<T>(this.getBaseUrl(), JSON.stringify(body), {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  }\r\n\r\n  createMany(body: T[]): Observable<T[]> {\r\n    return this.http.post<T[]>(\r\n      this.getBaseUrl() + '/bulk',\r\n      JSON.stringify({ bulk: body }),\r\n      {\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }\r\n    );\r\n  }\r\n\r\n  put(value: number | string | boolean, body: T): Observable<T> {\r\n    const url = this.getOneUrl(value);\r\n    return this.http.put<T>(url, JSON.stringify(body), {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  }\r\n\r\n  patch(value: number | string | boolean, body: T): Observable<T> {\r\n    const url = this.getOneUrl(value);\r\n    return this.http.patch<T>(url, JSON.stringify(body), {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  }\r\n\r\n  delete(value: number | string | boolean): Observable<void> {\r\n    const url = this.getOneUrl(value);\r\n    return this.http.delete<void>(url);\r\n  }\r\n\r\n  protected getParamsFromQuery(\r\n    builder: RequestQueryBuilder | CreateQueryParams\r\n  ) {\r\n    if (!(builder instanceof RequestQueryBuilder)) {\r\n      builder = RequestQueryBuilder.create(builder);\r\n    }\r\n    return new HttpParams({ fromString: this.getQuery(builder) });\r\n  }\r\n\r\n  /**\r\n   * Get request link\r\n   */\r\n  protected getBaseUrl(): string {\r\n    return `${this.options.apiUrl}/${this.options.entity}`;\r\n  }\r\n\r\n  protected getOneUrl(value: number | string | boolean) {\r\n    return `${this.getBaseUrl()}/${value}`;\r\n  }\r\n\r\n  private getQuery(builder?: RequestQueryBuilder) {\r\n    if (builder) {\r\n      return builder.query();\r\n    }\r\n    return '';\r\n  }\r\n}\r\n"]}