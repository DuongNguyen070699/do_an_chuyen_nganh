import { objKeys } from './obj.util';
export var isUndefined = function (val) { return typeof val === 'undefined'; };
export var isNull = function (val) { return val === null; };
export var isNil = function (val) { return isUndefined(val) || isNull(val); };
export var isString = function (val) { return typeof val === 'string'; };
export var hasLength = function (val) { return val.length > 0; };
export var isStringFull = function (val) { return isString(val) && hasLength(val); };
export var isArrayFull = function (val) { return Array.isArray(val) && hasLength(val); };
export var isArrayStrings = function (val) {
    return isArrayFull(val) && val.every(function (v) { return isStringFull(v); });
};
export var isObject = function (val) { return typeof val === 'object' && !isNull(val); };
export var isObjectFull = function (val) { return isObject(val) && hasLength(objKeys(val)); };
export var isNumber = function (val) {
    return typeof val === 'number' && !Number.isNaN(val) && Number.isFinite(val);
};
export var isEqual = function (val, eq) { return val === eq; };
export var isFalse = function (val) { return val === false; };
export var isTrue = function (val) { return val === true; };
export var isIn = function (val, arr) {
    if (arr === void 0) { arr = []; }
    return arr.some(function (o) { return isEqual(val, o); });
};
export var isBoolean = function (val) { return typeof val === 'boolean'; };
export var isNumeric = function (val) { return /^[+-]?([0-9]*[.])?[0-9]+$/.test(val); };
export var isDateString = function (val) {
    return isStringFull(val) &&
        /^\d{4}-[01]\d-[0-3]\d(?:T[0-2]\d:[0-5]\d:[0-5]\d(?:\.\d+)?(?:Z|[-+][0-2]\d(?::?[0-5]\d)?)?)?$/g.test(val);
};
export var isDate = function (val) { return val instanceof Date; };
export var isValue = function (val) {
    return isStringFull(val) || isNumber(val) || isBoolean(val) || isDate(val);
};
export var hasValue = function (val) {
    return isArrayFull(val) ? val.every(function (o) { return isValue(o); }) : isValue(val);
};
export var isFunction = function (val) { return typeof val === 'function'; };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tzLnV0aWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZXN0LWNydWQtdHlwZW9ybS1jbGllbnQvIiwic291cmNlcyI6WyJsaWIvdXRpbC9jaGVja3MudXRpbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sWUFBWSxDQUFDO0FBRXJDLE1BQU0sQ0FBQyxJQUFNLFdBQVcsR0FBRyxVQUFDLEdBQVEsSUFBYyxPQUFBLE9BQU8sR0FBRyxLQUFLLFdBQVcsRUFBMUIsQ0FBMEIsQ0FBQztBQUM3RSxNQUFNLENBQUMsSUFBTSxNQUFNLEdBQUcsVUFBQyxHQUFRLElBQWMsT0FBQSxHQUFHLEtBQUssSUFBSSxFQUFaLENBQVksQ0FBQztBQUMxRCxNQUFNLENBQUMsSUFBTSxLQUFLLEdBQUcsVUFBQyxHQUFRLElBQWMsT0FBQSxXQUFXLENBQUMsR0FBRyxDQUFDLElBQUksTUFBTSxDQUFDLEdBQUcsQ0FBQyxFQUEvQixDQUErQixDQUFDO0FBQzVFLE1BQU0sQ0FBQyxJQUFNLFFBQVEsR0FBRyxVQUFDLEdBQVEsSUFBYyxPQUFBLE9BQU8sR0FBRyxLQUFLLFFBQVEsRUFBdkIsQ0FBdUIsQ0FBQztBQUN2RSxNQUFNLENBQUMsSUFBTSxTQUFTLEdBQUcsVUFBQyxHQUFRLElBQWMsT0FBQSxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBZCxDQUFjLENBQUM7QUFDL0QsTUFBTSxDQUFDLElBQU0sWUFBWSxHQUFHLFVBQUMsR0FBUSxJQUFjLE9BQUEsUUFBUSxDQUFDLEdBQUcsQ0FBQyxJQUFJLFNBQVMsQ0FBQyxHQUFHLENBQUMsRUFBL0IsQ0FBK0IsQ0FBQztBQUNuRixNQUFNLENBQUMsSUFBTSxXQUFXLEdBQUcsVUFBQyxHQUFRLElBQWMsT0FBQSxLQUFLLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLFNBQVMsQ0FBQyxHQUFHLENBQUMsRUFBcEMsQ0FBb0MsQ0FBQztBQUN2RixNQUFNLENBQUMsSUFB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R0FBRyxVQUFDLEdBQVEsSUFBYyxPQUFBLE9BQU8sR0FBRyxLQUFLLFVBQVUsRUFBekIsQ0FBeUIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IG9iaktleXMgfSBmcm9tICcuL29iai51dGlsJztcblxuZXhwb3J0IGNvbnN0IGlzVW5kZWZpbmVkID0gKHZhbDogYW55KTogYm9vbGVhbiA9PiB0eXBlb2YgdmFsID09PSAndW5kZWZpbmVkJztcbmV4cG9ydCBjb25zdCBpc051bGwgPSAodmFsOiBhbnkpOiBib29sZWFuID0+IHZhbCA9PT0gbnVsbDtcbmV4cG9ydCBjb25zdCBpc05pbCA9ICh2YWw6IGFueSk6IGJvb2xlYW4gPT4gaXNVbmRlZmluZWQodmFsKSB8fCBpc051bGwodmFsKTtcbmV4cG9ydCBjb25zdCBpc1N0cmluZyA9ICh2YWw6IGFueSk6IGJvb2xlYW4gPT4gdHlwZW9mIHZhbCA9PT0gJ3N0cmluZyc7XG5leHBvcnQgY29uc3QgaGFzTGVuZ3RoID0gKHZhbDogYW55KTogYm9vbGVhbiA9PiB2YWwubGVuZ3RoID4gMDtcbmV4cG9ydCBjb25zdCBpc1N0cmluZ0Z1bGwgPSAodmFsOiBhbnkpOiBib29sZWFuID0+IGlzU3RyaW5nKHZhbCkgJiYgaGFzTGVuZ3RoKHZhbCk7XG5leHBvcnQgY29uc3QgaXNBcnJheUZ1bGwgPSAodmFsOiBhbnkpOiBib29sZWFuID0+IEFycmF5LmlzQXJyYXkodmFsKSAmJiBoYXNMZW5ndGgodmFsKTtcbmV4cG9ydCBjb25zdCBpc0FycmF5U3RyaW5ncyA9ICh2YWw6IGFueSk6IGJvb2xlYW4gPT5cbiAgaXNBcnJheUZ1bGwodmFsKSAmJiAodmFsIGFzIHN0cmluZ1tdKS5ldmVyeSgodikgPT4gaXNTdHJpbmdGdWxsKHYpKTtcbmV4cG9ydCBjb25zdCBpc09iamVjdCA9ICh2YWw6IGFueSk6IGJvb2xlYW4gPT4gdHlwZW9mIHZhbCA9PT0gJ29iamVjdCcgJiYgIWlzTnVsbCh2YWwpO1xuZXhwb3J0IGNvbnN0IGlzT2JqZWN0RnVsbCA9ICh2YWw6IGFueSkgPT4gaXNPYmplY3QodmFsKSAmJiBoYXNMZW5ndGgob2JqS2V5cyh2YWwpKTtcbmV4cG9ydCBjb25zdCBpc051bWJlciA9ICh2YWw6IGFueSk6IGJvb2xlYW4gPT5cbiAgdHlwZW9mIHZhbCA9PT0gJ251bWJlcicgJiYgIU51bWJlci5pc05hTih2YWwpICYmIE51bWJlci5pc0Zpbml0ZSh2YWwpO1xuZXhwb3J0IGNvbnN0IGlzRXF1YWwgPSAodmFsOiBhbnksIGVxOiBhbnkpOiBib29sZWFuID0+IHZhbCA9PT0gZXE7XG5leHBvcnQgY29uc3QgaXNGYWxzZSA9ICh2YWw6IGFueSk6IGJvb2xlYW4gPT4gdmFsID09PSBmYWxzZTtcbmV4cG9ydCBjb25zdCBpc1RydWUgPSAodmFsOiBhbnkpOiBib29sZWFuID0+IHZhbCA9PT0gdHJ1ZTtcbmV4cG9ydCBjb25zdCBpc0luID0gKHZhbDogYW55LCBhcnI6IGFueVtdID0gW10pOiBib29sZWFuID0+XG4gIGFyci5zb21lKChvKSA9PiBpc0VxdWFsKHZhbCwgbykpO1xuZXhwb3J0IGNvbnN0IGlzQm9vbGVhbiA9ICh2YWw6IGFueSk6IGJvb2xlYW4gPT4gdHlwZW9mIHZhbCA9PT0gJ2Jvb2xlYW4nO1xuZXhwb3J0IGNvbnN0IGlzTnVtZXJpYyA9ICh2YWw6IGFueSk6IGJvb2xlYW4gPT4gL15bKy1dPyhbMC05XSpbLl0pP1swLTldKyQvLnRlc3QodmFsKTtcbmV4cG9ydCBjb25zdCBpc0RhdGVTdHJpbmcgPSAodmFsOiBhbnkpOiBib29sZWFuID0+XG4gIGlzU3RyaW5nRnVsbCh2YWwpICYmXG4gIC9eXFxkezR9LVswMV1cXGQtWzAtM11cXGQoPzpUWzAtMl1cXGQ6WzAtNV1cXGQ6WzAtNV1cXGQoPzpcXC5cXGQrKT8oPzpafFstK11bMC0yXVxcZCg/Ojo/WzAtNV1cXGQpPyk/KT8kL2cudGVzdChcbiAgICB2YWwsXG4gICk7XG5leHBvcnQgY29uc3QgaXNEYXRlID0gKHZhbDogYW55KTogdmFsIGlzIERhdGUgPT4gdmFsIGluc3RhbmNlb2YgRGF0ZTtcbmV4cG9ydCBjb25zdCBpc1ZhbHVlID0gKHZhbDogYW55KTogYm9vbGVhbiA9PlxuICBpc1N0cmluZ0Z1bGwodmFsKSB8fCBpc051bWJlcih2YWwpIHx8IGlzQm9vbGVhbih2YWwpIHx8IGlzRGF0ZSh2YWwpO1xuZXhwb3J0IGNvbnN0IGhhc1ZhbHVlID0gKHZhbDogYW55KTogYm9vbGVhbiA9PlxuICBpc0FycmF5RnVsbCh2YWwpID8gKHZhbCBhcyBhbnlbXSkuZXZlcnkoKG8pID0+IGlzVmFsdWUobykpIDogaXNWYWx1ZSh2YWwpO1xuZXhwb3J0IGNvbnN0IGlzRnVuY3Rpb24gPSAodmFsOiBhbnkpOiBib29sZWFuID0+IHR5cGVvZiB2YWwgPT09ICdmdW5jdGlvbic7XG4iXX0=