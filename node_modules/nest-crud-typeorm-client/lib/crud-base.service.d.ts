import { HttpClient, HttpParams } from '@angular/common/http';
import { Observable } from 'rxjs';
import { CreateQueryParams, RequestQueryBuilder } from './crud-request';
export interface CrudBaseOptions {
    entity: string;
    apiUrl: string;
}
export interface ResponsePagination<T> {
    data: Array<T>;
    count: number;
    total: number;
    page: number;
    pageCount: number;
}
export declare abstract class CrudBaseService<T> {
    protected http: HttpClient;
    protected options: CrudBaseOptions;
    constructor(options: CrudBaseOptions, http: HttpClient);
    getPagination(limit: number, page: number, builder?: RequestQueryBuilder | CreateQueryParams): Observable<ResponsePagination<T>>;
    getMany(builder?: RequestQueryBuilder | CreateQueryParams): Observable<T[]>;
    getOne(value: number | string | boolean, builder?: RequestQueryBuilder | CreateQueryParams): Observable<T>;
    create(body: T): Observable<T>;
    createMany(body: T[]): Observable<T[]>;
    put(value: number | string | boolean, body: T): Observable<T>;
    patch(value: number | string | boolean, body: T): Observable<T>;
    delete(value: number | string | boolean): Observable<void>;
    protected getParamsFromQuery(builder: RequestQueryBuilder | CreateQueryParams): HttpParams;
    /**
     * Get request link
     */
    protected getBaseUrl(): string;
    protected getOneUrl(value: number | string | boolean): string;
    private getQuery;
}
