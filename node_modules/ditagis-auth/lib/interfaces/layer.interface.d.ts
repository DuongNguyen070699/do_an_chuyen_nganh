export interface LayerEntity {
    layerId?: string;
    layerName?: string;
    datasetId?: string;
    dataset?: DatasetEntity;
    url?: string;
}
export interface LayerInfo extends LayerEntity {
    isView: boolean;
    isCreate: boolean;
    isDelete: boolean;
    isUpdate: boolean;
    definition?: string;
}
export interface DatasetEntity {
    datasetId?: string;
    datasetName?: string;
    layers?: LayerEntity[];
}
export interface ColumnEntity {
    name?: string;
    alias?: string;
    type?: ColumnTypeEnum;
    isNullable?: boolean;
    domainId?: string;
    domain?: CodedDomainEntity;
    layerId?: string;
    layer?: LayerEntity;
}
export declare enum ColumnTypeEnum {
    string = "esriFieldTypeString",
    smallInteger = "esriFieldTypeSmallInteger",
    integer = "esriFieldTypeInteger",
    double = "esriFieldTypeDouble",
    long = "esriFieldTypeLong",
    date = "esriFieldTypeDate",
    oid = "esriFieldTypeOID",
    geometry = "esriFieldTypeGeometry"
}
export interface CodedDomainEntity {
    id?: string;
    name?: string;
    type?: 'esriFieldTypeInteger' | 'esriFieldTypeSmallInteger' | 'esriFieldTypeString';
    codedValues?: CodedValueEntity[];
}
export interface CodedValueEntity {
    id?: string;
    code?: string;
    name?: string;
    domain?: CodedDomainEntity;
}
