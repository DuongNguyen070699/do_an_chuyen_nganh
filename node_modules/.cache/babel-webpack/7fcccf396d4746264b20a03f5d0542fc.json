{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreeMobxAutorunDirective } from './mobx-angular/tree-mobx-autorun.directive';\nimport { TREE_ACTIONS } from './models/tree-options.model';\nimport { KEYS } from './constants/keys';\nimport { TreeModel } from './models/tree.model';\nimport { TreeNode } from './models/tree-node.model';\nimport { TreeDraggedElement } from './models/tree-dragged-element.model';\nimport { TreeVirtualScroll } from './models/tree-virtual-scroll.model';\nimport { LoadingComponent } from './components/loading.component';\nimport { TreeComponent } from './components/tree.component';\nimport { TreeNodeComponent } from './components/tree-node.component';\nimport { TreeNodeContent } from './components/tree-node-content.component';\nimport { TreeNodeDropSlot } from './components/tree-node-drop-slot.component';\nimport { TreeNodeExpanderComponent } from './components/tree-node-expander.component';\nimport { TreeNodeChildrenComponent } from './components/tree-node-children.component';\nimport { TreeNodeCollectionComponent } from './components/tree-node-collection.component';\nimport { TreeNodeWrapperComponent } from './components/tree-node-wrapper.component';\nimport { TreeViewportComponent } from './components/tree-viewport.component';\nimport { TreeNodeCheckboxComponent } from './components/tree-node-checkbox.component';\nimport { TreeDropDirective } from './directives/tree-drop.directive';\nimport { TreeDragDirective } from './directives/tree-drag.directive';\nimport { TreeAnimateOpenDirective } from './directives/tree-animate-open.directive';\nimport './polyfills';\n\nvar TreeModule =\n/** @class */\nfunction () {\n  function TreeModule() {}\n\n  TreeModule_1 = TreeModule;\n\n  TreeModule.forRoot = function () {\n    return {\n      ngModule: TreeModule_1,\n      providers: [TreeDraggedElement]\n    };\n  };\n\n  var TreeModule_1;\n  TreeModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n    type: TreeModule\n  });\n  TreeModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n    factory: function TreeModule_Factory(t) {\n      return new (t || TreeModule)();\n    },\n    providers: [],\n    imports: [[CommonModule]]\n  });\n\n  (function () {\n    (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TreeModule, {\n      declarations: function declarations() {\n        return [TreeComponent, TreeNodeComponent, TreeNodeContent, LoadingComponent, TreeDropDirective, TreeDragDirective, TreeNodeExpanderComponent, TreeNodeChildrenComponent, TreeNodeDropSlot, TreeNodeCollectionComponent, TreeViewportComponent, TreeNodeWrapperComponent, TreeNodeCheckboxComponent, TreeAnimateOpenDirective, TreeMobxAutorunDirective];\n      },\n      imports: function imports() {\n        return [CommonModule];\n      },\n      exports: function exports() {\n        return [TreeComponent, TreeNodeComponent, TreeNodeContent, LoadingComponent, TreeDropDirective, TreeDragDirective, TreeNodeExpanderComponent, TreeNodeChildrenComponent, TreeNodeDropSlot, TreeNodeCollectionComponent, TreeViewportComponent, TreeNodeWrapperComponent, TreeNodeCheckboxComponent, TreeAnimateOpenDirective, TreeMobxAutorunDirective];\n      }\n    });\n  })();\n  /*@__PURE__*/\n\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(TreeModule, [{\n      type: NgModule,\n      args: [{\n        declarations: [TreeComponent, TreeNodeComponent, TreeNodeContent, LoadingComponent, TreeDropDirective, TreeDragDirective, TreeNodeExpanderComponent, TreeNodeChildrenComponent, TreeNodeDropSlot, TreeNodeCollectionComponent, TreeViewportComponent, TreeNodeWrapperComponent, TreeNodeCheckboxComponent, TreeAnimateOpenDirective, TreeMobxAutorunDirective],\n        exports: [TreeComponent, TreeNodeComponent, TreeNodeContent, LoadingComponent, TreeDropDirective, TreeDragDirective, TreeNodeExpanderComponent, TreeNodeChildrenComponent, TreeNodeDropSlot, TreeNodeCollectionComponent, TreeViewportComponent, TreeNodeWrapperComponent, TreeNodeCheckboxComponent, TreeAnimateOpenDirective, TreeMobxAutorunDirective],\n        imports: [CommonModule],\n        providers: []\n      }]\n    }], function () {\n      return [];\n    }, null);\n  })();\n\n  ɵngcc0.ɵɵsetComponentScope(TreeNodeCollectionComponent, [ɵngcc1.NgClass, ɵngcc1.NgComponentOutlet, ɵngcc1.NgForOf, ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgStyle, ɵngcc1.NgSwitch, ɵngcc1.NgSwitchCase, ɵngcc1.NgSwitchDefault, ɵngcc1.NgPlural, ɵngcc1.NgPluralCase, TreeComponent, TreeNodeComponent, TreeNodeContent, LoadingComponent, TreeDropDirective, TreeDragDirective, TreeNodeExpanderComponent, TreeNodeChildrenComponent, TreeNodeDropSlot, TreeNodeCollectionComponent, TreeViewportComponent, TreeNodeWrapperComponent, TreeNodeCheckboxComponent, TreeAnimateOpenDirective, TreeMobxAutorunDirective], [ɵngcc1.AsyncPipe, ɵngcc1.UpperCasePipe, ɵngcc1.LowerCasePipe, ɵngcc1.JsonPipe, ɵngcc1.SlicePipe, ɵngcc1.DecimalPipe, ɵngcc1.PercentPipe, ɵngcc1.TitleCasePipe, ɵngcc1.CurrencyPipe, ɵngcc1.DatePipe, ɵngcc1.I18nPluralPipe, ɵngcc1.I18nSelectPipe, ɵngcc1.KeyValuePipe]);\n  return TreeModule;\n}();\n\nexport { TreeModule };\nexport { TreeModel, TreeNode, TreeDraggedElement, TreeVirtualScroll, TREE_ACTIONS, KEYS, LoadingComponent, TreeAnimateOpenDirective, TreeComponent, TreeNodeComponent, TreeNodeWrapperComponent, TreeNodeContent, TreeDropDirective, TreeDragDirective, TreeNodeExpanderComponent, TreeNodeChildrenComponent, TreeNodeDropSlot, TreeNodeCollectionComponent, TreeViewportComponent, TreeNodeCheckboxComponent };\nexport { TreeMobxAutorunDirective } from './mobx-angular/tree-mobx-autorun.directive';","map":{"version":3,"sources":["../lib/angular-tree-component.ts"],"names":[],"mappings":"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","sourcesContent":["import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TreeMobxAutorunDirective } from './mobx-angular/tree-mobx-autorun.directive';\n\nimport {\n  IActionHandler,\n  IActionMapping,\n  TREE_ACTIONS\n} from './models/tree-options.model';\nimport {\n  IAllowDragFn,\n  IAllowDropFn,\n  ITreeOptions,\n  ITreeState\n} from './defs/api';\nimport { KEYS } from './constants/keys';\nimport { TreeModel } from './models/tree.model';\nimport { TreeNode } from './models/tree-node.model';\nimport { TreeDraggedElement } from './models/tree-dragged-element.model';\nimport { TreeVirtualScroll } from './models/tree-virtual-scroll.model';\nimport { LoadingComponent } from './components/loading.component';\nimport { TreeComponent } from './components/tree.component';\nimport { TreeNodeComponent } from './components/tree-node.component';\nimport { TreeNodeContent } from './components/tree-node-content.component';\nimport { TreeNodeDropSlot } from './components/tree-node-drop-slot.component';\nimport { TreeNodeExpanderComponent } from './components/tree-node-expander.component';\nimport { TreeNodeChildrenComponent } from './components/tree-node-children.component';\nimport { TreeNodeCollectionComponent } from './components/tree-node-collection.component';\nimport { TreeNodeWrapperComponent } from './components/tree-node-wrapper.component';\nimport { TreeViewportComponent } from './components/tree-viewport.component';\nimport { TreeNodeCheckboxComponent } from './components/tree-node-checkbox.component';\nimport { TreeDropDirective } from './directives/tree-drop.directive';\nimport { TreeDragDirective } from './directives/tree-drag.directive';\nimport { TreeAnimateOpenDirective } from './directives/tree-animate-open.directive';\n\nimport './polyfills';\n\n@NgModule({\n  declarations: [\n    TreeComponent,\n    TreeNodeComponent,\n    TreeNodeContent,\n    LoadingComponent,\n    TreeDropDirective,\n    TreeDragDirective,\n    TreeNodeExpanderComponent,\n    TreeNodeChildrenComponent,\n    TreeNodeDropSlot,\n    TreeNodeCollectionComponent,\n    TreeViewportComponent,\n    TreeNodeWrapperComponent,\n    TreeNodeCheckboxComponent,\n    TreeAnimateOpenDirective,\n    TreeMobxAutorunDirective\n  ],\n  exports: [\n    TreeComponent,\n    TreeNodeComponent,\n    TreeNodeContent,\n    LoadingComponent,\n    TreeDropDirective,\n    TreeDragDirective,\n    TreeNodeExpanderComponent,\n    TreeNodeChildrenComponent,\n    TreeNodeDropSlot,\n    TreeNodeCollectionComponent,\n    TreeViewportComponent,\n    TreeNodeWrapperComponent,\n    TreeNodeCheckboxComponent,\n    TreeAnimateOpenDirective,\n    TreeMobxAutorunDirective\n  ],\n  imports: [CommonModule],\n  providers: []\n})\nexport class TreeModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: TreeModule,\n      providers: [TreeDraggedElement]\n    };\n  }\n}\n\nexport {\n  TreeModel,\n  TreeNode,\n  TreeDraggedElement,\n  TreeVirtualScroll,\n  ITreeOptions,\n  TREE_ACTIONS,\n  KEYS,\n  IActionMapping,\n  IActionHandler,\n  IAllowDropFn,\n  IAllowDragFn,\n  LoadingComponent,\n  TreeAnimateOpenDirective,\n  TreeComponent,\n  TreeNodeComponent,\n  TreeNodeWrapperComponent,\n  TreeNodeContent,\n  TreeDropDirective,\n  TreeDragDirective,\n  TreeNodeExpanderComponent,\n  TreeNodeChildrenComponent,\n  TreeNodeDropSlot,\n  TreeNodeCollectionComponent,\n  TreeViewportComponent,\n  TreeNodeCheckboxComponent,\n  ITreeState\n};\n"]},"metadata":{},"sourceType":"module"}