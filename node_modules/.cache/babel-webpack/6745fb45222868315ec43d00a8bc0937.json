{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '../mobx-angular/tree-mobx-autorun.directive';\nimport * as ɵngcc2 from '../directives/tree-animate-open.directive';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from './tree-node-collection.component';\nimport * as ɵngcc5 from './loading.component';\n\nfunction TreeNodeChildrenComponent_ng_container_0_div_1_tree_node_collection_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node-collection\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"nodes\", ctx_r2.node.children)(\"templates\", ctx_r2.templates)(\"treeModel\", ctx_r2.node.treeModel);\n  }\n}\n\nfunction TreeNodeChildrenComponent_ng_container_0_div_1_tree_loading_component_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-loading-component\", 5);\n  }\n\n  if (rf & 2) {\n    var ctx_r3 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵstyleProp(\"padding-left\", ctx_r3.node.getNodePadding());\n    ɵngcc0.ɵɵproperty(\"template\", ctx_r3.templates.loadingTemplate)(\"node\", ctx_r3.node);\n  }\n}\n\nfunction TreeNodeChildrenComponent_ng_container_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵtemplate(1, TreeNodeChildrenComponent_ng_container_0_div_1_tree_node_collection_1_Template, 1, 3, \"tree-node-collection\", 2);\n    ɵngcc0.ɵɵtemplate(2, TreeNodeChildrenComponent_ng_container_0_div_1_tree_loading_component_2_Template, 1, 4, \"tree-loading-component\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"tree-children\", true)(\"tree-children-no-padding\", ctx_r1.node.options.levelPadding);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r1.node.children);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.node.children);\n  }\n}\n\nfunction TreeNodeChildrenComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, TreeNodeChildrenComponent_ng_container_0_div_1_Template, 3, 6, \"div\", 1);\n    ɵngcc0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"treeAnimateOpen\", ctx_r0.node.isExpanded)(\"treeAnimateOpenSpeed\", ctx_r0.node.options.animateSpeed)(\"treeAnimateOpenAcceleration\", ctx_r0.node.options.animateAcceleration)(\"treeAnimateOpenEnabled\", ctx_r0.node.options.animateExpand);\n  }\n}\n\nvar _c0 = function _c0() {\n  return {\n    dontDetach: true\n  };\n};\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { TreeNode } from '../models/tree-node.model';\n\nvar TreeNodeChildrenComponent =\n/** @class */\nfunction () {\n  function TreeNodeChildrenComponent() {}\n\n  __decorate([Input(), __metadata(\"design:type\", TreeNode)], TreeNodeChildrenComponent.prototype, \"node\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], TreeNodeChildrenComponent.prototype, \"templates\", void 0);\n\n  TreeNodeChildrenComponent.ɵfac = function TreeNodeChildrenComponent_Factory(t) {\n    return new (t || TreeNodeChildrenComponent)();\n  };\n\n  TreeNodeChildrenComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: TreeNodeChildrenComponent,\n    selectors: [[\"tree-node-children\"]],\n    inputs: {\n      node: \"node\",\n      templates: \"templates\"\n    },\n    decls: 1,\n    vars: 2,\n    consts: [[4, \"treeMobxAutorun\"], [3, \"tree-children\", \"tree-children-no-padding\", 4, \"treeAnimateOpen\", \"treeAnimateOpenSpeed\", \"treeAnimateOpenAcceleration\", \"treeAnimateOpenEnabled\"], [3, \"nodes\", \"templates\", \"treeModel\", 4, \"ngIf\"], [\"class\", \"tree-node-loading\", 3, \"padding-left\", \"template\", \"node\", 4, \"ngIf\"], [3, \"nodes\", \"templates\", \"treeModel\"], [1, \"tree-node-loading\", 3, \"template\", \"node\"]],\n    template: function TreeNodeChildrenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TreeNodeChildrenComponent_ng_container_0_Template, 2, 4, \"ng-container\", 0);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"treeMobxAutorun\", ɵngcc0.ɵɵpureFunction0(1, _c0));\n      }\n    },\n    directives: [ɵngcc1.TreeMobxAutorunDirective, ɵngcc2.TreeAnimateOpenDirective, ɵngcc3.NgIf, ɵngcc4.TreeNodeCollectionComponent, ɵngcc5.LoadingComponent],\n    encapsulation: 2\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(TreeNodeChildrenComponent, [{\n      type: Component,\n      args: [{\n        selector: 'tree-node-children',\n        encapsulation: ViewEncapsulation.None,\n        styles: [],\n        template: \"\\n    <ng-container *treeMobxAutorun=\\\"{ dontDetach: true }\\\">\\n      <div\\n        [class.tree-children]=\\\"true\\\"\\n        [class.tree-children-no-padding]=\\\"node.options.levelPadding\\\"\\n        *treeAnimateOpen=\\\"\\n          node.isExpanded;\\n          speed: node.options.animateSpeed;\\n          acceleration: node.options.animateAcceleration;\\n          enabled: node.options.animateExpand\\n        \\\"\\n      >\\n        <tree-node-collection\\n          *ngIf=\\\"node.children\\\"\\n          [nodes]=\\\"node.children\\\"\\n          [templates]=\\\"templates\\\"\\n          [treeModel]=\\\"node.treeModel\\\"\\n        >\\n        </tree-node-collection>\\n        <tree-loading-component\\n          [style.padding-left]=\\\"node.getNodePadding()\\\"\\n          class=\\\"tree-node-loading\\\"\\n          *ngIf=\\\"!node.children\\\"\\n          [template]=\\\"templates.loadingTemplate\\\"\\n          [node]=\\\"node\\\"\\n        ></tree-loading-component>\\n      </div>\\n    </ng-container>\\n  \"\n      }]\n    }], function () {\n      return [];\n    }, {\n      node: [{\n        type: Input\n      }],\n      templates: [{\n        type: Input\n      }]\n    });\n  })();\n\n  return TreeNodeChildrenComponent;\n}();\n\nexport { TreeNodeChildrenComponent };","map":{"version":3,"sources":["../../lib/components/tree-node-children.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAT,EAAoB,KAApB,EAA2B,iBAA3B,QAAoD,eAApD;AACA,SAAS,QAAT,QAAyB,2BAAzB;;AAoCA,IAAA,yBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,yBAAA,GAAA,CAGC;;AAFU,EAAA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAK,QAAL,CAAD,CAAA,EACX,yBAAA,CAAA,SADW,EACX,MADW,EACX,KAD0B,CAAf,CAAA;;AACA,EAAA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAEc,yBAAA,CAAA,SAFd,EAEc,WAFd,EAEc,KAFC,CAAf,CAAA;;AAFE,EAAA,yBAAA,CAAA,IAAA,GAAyB,SAlCrC,iCAkCqC,CAlC3B,CAkC2B,EAjCpC;AAAA,WAAU,KAAA,CAAA,IAAA,yBAAA,GAAV;AACA,GAgCW;;AAhCE,EAAA,yBAAoB,CAAA,IAApB,GAAwB,MAAA,CAAA,iBAAA,CAC3B;AAAA,IAAA,IAAA,EACV,yBADU;AACA,IAAA,SAAA,EAAA,CAAA,CAAA,oBAAA,CAAA,CADA;AACA,IAAA,MAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,SAAA,EAAA;AAAA,KADA;AACA,IAAA,KAAA,EAAA,CADA;AACA,IAAA,IAAA,EAAA,CADA;AACA,IAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,eAAA,EAAA,0BAAA,EAAA,CAAA,EAAA,iBAAA,EAAA,sBAAA,EAAA,6BAAA,EAAA,wBAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,WAAA,EAAA,WAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,OAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,cAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,EAAA,MAAA,CAAA,EAAA,CAAA,CAAA,EAAA,OAAA,EAAA,WAAA,EAAA,WAAA,CAAA,EAAA,CAAA,CAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,UAAA,EAAA,MAAA,CAAA,CADA;AACA,IAAA,QAAA,EAAA,SAAA,kCAAA,CAAA,EAAA,EAAA,GAAA,EAAA;AAAA,UAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;KADA;2IA6BT,gB,CA7BS;AA8BV,IAAA,aACW,EAAA;AA/BD,GAD2B,CAAxB;AAgCuB;;AAGrC,GAAA,YAAA;AAAA,IAAA,MAAA,CAAA,iBAAA,CAAA,yBAAA,EAAA,CAAA;qBAAA;;;;;;;AAAA,KAAA,CAAA,E;;KAAA,E;;;;;;;KAAA;AACD,GADC;;AAAD,SAAA,yBAAA;AAAC,CAHD,EAAA;;AAIA,SAJa,yBAIb","sourcesContent":["import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { TreeNode } from '../models/tree-node.model';\n\n@Component({\n  selector: 'tree-node-children',\n  encapsulation: ViewEncapsulation.None,\n  styles: [],\n  template: `\n    <ng-container *treeMobxAutorun=\"{ dontDetach: true }\">\n      <div\n        [class.tree-children]=\"true\"\n        [class.tree-children-no-padding]=\"node.options.levelPadding\"\n        *treeAnimateOpen=\"\n          node.isExpanded;\n          speed: node.options.animateSpeed;\n          acceleration: node.options.animateAcceleration;\n          enabled: node.options.animateExpand\n        \"\n      >\n        <tree-node-collection\n          *ngIf=\"node.children\"\n          [nodes]=\"node.children\"\n          [templates]=\"templates\"\n          [treeModel]=\"node.treeModel\"\n        >\n        </tree-node-collection>\n        <tree-loading-component\n          [style.padding-left]=\"node.getNodePadding()\"\n          class=\"tree-node-loading\"\n          *ngIf=\"!node.children\"\n          [template]=\"templates.loadingTemplate\"\n          [node]=\"node\"\n        ></tree-loading-component>\n      </div>\n    </ng-container>\n  `\n})\nexport class TreeNodeChildrenComponent {\n  @Input() node: TreeNode;\n  @Input() templates: any;\n}\n"]},"metadata":{},"sourceType":"module"}