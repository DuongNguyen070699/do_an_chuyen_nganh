{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '../directives/tree-drop.directive';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { TreeNode } from '../models/tree-node.model';\n\nvar TreeNodeDropSlot =\n/** @class */\nfunction () {\n  function TreeNodeDropSlot() {}\n\n  TreeNodeDropSlot.prototype.onDrop = function ($event) {\n    this.node.mouseAction('drop', $event.event, {\n      from: $event.element,\n      to: {\n        parent: this.node,\n        index: this.dropIndex\n      }\n    });\n  };\n\n  TreeNodeDropSlot.prototype.allowDrop = function (element, $event) {\n    return this.node.options.allowDrop(element, {\n      parent: this.node,\n      index: this.dropIndex\n    }, $event);\n  };\n\n  __decorate([Input(), __metadata(\"design:type\", TreeNode)], TreeNodeDropSlot.prototype, \"node\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], TreeNodeDropSlot.prototype, \"dropIndex\", void 0);\n\n  TreeNodeDropSlot.ɵfac = function TreeNodeDropSlot_Factory(t) {\n    return new (t || TreeNodeDropSlot)();\n  };\n\n  TreeNodeDropSlot.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: TreeNodeDropSlot,\n    selectors: [[\"TreeNodeDropSlot\"], [\"tree-node-drop-slot\"]],\n    inputs: {\n      node: \"node\",\n      dropIndex: \"dropIndex\"\n    },\n    decls: 1,\n    vars: 2,\n    consts: [[1, \"node-drop-slot\", 3, \"treeAllowDrop\", \"allowDragoverStyling\", \"treeDrop\"]],\n    template: function TreeNodeDropSlot_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"treeDrop\", function TreeNodeDropSlot_Template_div_treeDrop_0_listener($event) {\n          return ctx.onDrop($event);\n        });\n        ɵngcc0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"treeAllowDrop\", ctx.allowDrop.bind(ctx))(\"allowDragoverStyling\", true);\n      }\n    },\n    directives: [ɵngcc1.TreeDropDirective],\n    encapsulation: 2\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(TreeNodeDropSlot, [{\n      type: Component,\n      args: [{\n        selector: 'TreeNodeDropSlot, tree-node-drop-slot',\n        encapsulation: ViewEncapsulation.None,\n        styles: [],\n        template: \"\\n    <div\\n      class=\\\"node-drop-slot\\\"\\n      (treeDrop)=\\\"onDrop($event)\\\"\\n      [treeAllowDrop]=\\\"allowDrop.bind(this)\\\"\\n      [allowDragoverStyling]=\\\"true\\\">\\n    </div>\\n  \"\n      }]\n    }], function () {\n      return [];\n    }, {\n      node: [{\n        type: Input\n      }],\n      dropIndex: [{\n        type: Input\n      }]\n    });\n  })();\n\n  return TreeNodeDropSlot;\n}();\n\nexport { TreeNodeDropSlot };","map":{"version":3,"sources":["../../lib/components/tree-node-drop-slot.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAAA,SAAS,SAAT,EAAoB,KAApB,EAA2B,iBAA3B,QAAoD,eAApD;AACA,SAAS,QAAT,QAAyB,2BAAzB;;AAeA,IAAA,gBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,gBAAA,GAAA,CAcC;;AAVC,EAAA,gBAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAAa;AACX,SAAK,IAAL,CAAU,WAAV,CAAsB,MAAtB,EAA8B,MAAM,CAAC,KAArC,EAA4C;AAC1C,MAAA,IAAI,EAAE,MAAM,CAAC,OAD6B;AAE1C,MAAA,EAAE,EAAE;AAAE,QAAA,MAAM,EAAE,KAAK,IAAf;AAAqB,QAAA,KAAK,EAAE,KAAK;AAAjC;AAFsC,KAA5C;AAID,GALD;;AAOA,EAAA,gBAAA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,OAAV,EAAmB,MAAnB,EAAyB;AACvB,WAAO,KAAK,IAAL,CAAU,OAAV,CAAkB,SAAlB,CAA4B,OAA5B,EAAqC;AAAE,MAAA,MAAM,EAAE,KAAK,IAAf;AAAqB,MAAA,KAAK,EAAE,KAAK;AAAjC,KAArC,EAAmF,MAAnF,CAAP;AACD,GAFD;;AAVS,EAAA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAK,QAAL,CAAD,CAAA,EACX,gBAAA,CAAA,SADW,EACX,MADW,EACX,KAD0B,CAAf,CAAA;;AACA,EAAA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAGP,gBAAA,CAAA,SAHO,EAGP,WAHO,EAGP,KAHyB,CAAlB,CAAA;;AAFE,EAAA,gBAAA,CAAA,IAAA,GAAgB,SAb5B,wBAa4B,CAblB,CAakB,EAblB;AAAA,WACT,KAAA,CAAQ,IAAE,gBAAV,GADS;AACC,GAYC;;AAZsC,EAAA,gBAAA,CAAA,IAAA,GAAA,MACjD,CAAA,iBADiD,CAClC;AAAA,IAAA,IAAA,EAAA,gBAAA;AAAsB,IAAA,SAC/B,EAAE,CAAA,CAAE,kBAAF,CAAA,EACR,CAAQ,qBAAR,CADQ,CADO;AAEL,IAAA,MAAA,EAAA;AAAA,MAAA,IAAA,EAAA,MAAA;AAAA,MAAA,SAAA,EAAA;AAAA,KAFK;AAEL,IAAA,KAAA,EAAA,CAFK;AAEL,IAAA,IAAA,EAAA,CAFK;AAEL,IAAA,MAAA,EAAA,CAAA,CAAA,CAAA,EAAA,gBAAA,EAAA,CAAA,EAAA,eAAA,EAAA,sBAAA,EAAA,UAAA,CAAA,CAFK;AAEL,IAAA,QAOT,EAAA,SACD,yBADC,CAgBF,EAhBE,EAgBF,GAhBE,EAgBF;AAAA,UAAA,EAAA,GAAA,CAAA,EAAA;;;;;;;;;;;KAzBgB;0CAAA;;AAAA,GADkC,CAAA;;;;;;;;;;;;;;;;;;;;;;AA2BnD,G;;AADA,SAAA,gBAAA;AAAC,CAdD,EAAA;;AAeA,SAfa,gBAeb","sourcesContent":["import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { TreeNode } from '../models/tree-node.model';\n\n@Component({\n  selector: 'TreeNodeDropSlot, tree-node-drop-slot',\n  encapsulation: ViewEncapsulation.None,\n  styles: [],\n  template: `\n    <div\n      class=\"node-drop-slot\"\n      (treeDrop)=\"onDrop($event)\"\n      [treeAllowDrop]=\"allowDrop.bind(this)\"\n      [allowDragoverStyling]=\"true\">\n    </div>\n  `\n})\nexport class TreeNodeDropSlot {\n  @Input() node: TreeNode;\n  @Input() dropIndex: number;\n\n  onDrop($event) {\n    this.node.mouseAction('drop', $event.event, {\n      from: $event.element,\n      to: { parent: this.node, index: this.dropIndex }\n    });\n  }\n\n  allowDrop(element, $event) {\n    return this.node.options.allowDrop(element, { parent: this.node, index: this.dropIndex }, $event);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}