{"ast":null,"code":"import { action as mobxAction } from 'mobx';\nimport { computed as mobxComputed } from 'mobx';\nimport { observable as mobxObservable } from 'mobx'; // Re-export mobx operators to be able to use inside components with AOT:\n\nexport function actionInternal() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return mobxAction.apply(void 0, args);\n}\nexport var action = Object.assign(actionInternal, mobxAction);\n\nfunction computedInternal() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return mobxComputed.apply(void 0, args);\n}\n\nexport var computed = Object.assign(computedInternal, mobxComputed);\n\nfunction observableInternal() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  return mobxObservable.apply(void 0, args);\n}\n\nexport var observable = Object.assign(observableInternal, mobxObservable);","map":{"version":3,"sources":["../../lib/mobx-angular/mobx-proxy.ts"],"names":[],"mappings":"AAAA,SAAS,MAAM,IAAI,UAAnB,QAAqC,MAArC;AACA,SAAS,QAAQ,IAAI,YAArB,QAAyC,MAAzC;AACA,SAAS,UAAU,IAAI,cAAvB,QAA6C,MAA7C,C,CAEA;;AACA,OAAM,SAAU,cAAV,GAAwB;AAAC,MAAA,IAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAO;AAAP,IAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAC7B,SAAQ,UAAkB,CAAA,KAAlB,CAAkB,KAAA,CAAlB,EAAsB,IAAtB,CAAR;AACD;AACD,OAAO,IAAM,MAAM,GAAsB,MAAM,CAAC,MAAP,CACvC,cADuC,EAEvC,UAFuC,CAAlC;;AAKP,SAAS,gBAAT,GAAyB;AAAC,MAAA,IAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAO;AAAP,IAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACxB,SAAQ,YAAoB,CAAA,KAApB,CAAoB,KAAA,CAApB,EAAwB,IAAxB,CAAR;AACD;;AACD,OAAO,IAAM,QAAQ,GAAwB,MAAM,CAAC,MAAP,CAC3C,gBAD2C,EAE3C,YAF2C,CAAtC;;AAKP,SAAS,kBAAT,GAA2B;AAAC,MAAA,IAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAO;AAAP,IAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAC1B,SAAQ,cAAsB,CAAA,KAAtB,CAAsB,KAAA,CAAtB,EAA0B,IAA1B,CAAR;AACD;;AAED,OAAO,IAAM,UAAU,GAA0B,MAAM,CAAC,MAAP,CAC/C,kBAD+C,EAE/C,cAF+C,CAA1C","sourcesContent":["import { action as mobxAction } from 'mobx';\nimport { computed as mobxComputed } from 'mobx';\nimport { observable as mobxObservable } from 'mobx';\n\n// Re-export mobx operators to be able to use inside components with AOT:\nexport function actionInternal(...args) {\n  return (mobxAction as any)(...args);\n}\nexport const action: typeof mobxAction = Object.assign(\n  actionInternal,\n  mobxAction\n) as any;\n\nfunction computedInternal(...args) {\n  return (mobxComputed as any)(...args);\n}\nexport const computed: typeof mobxComputed = Object.assign(\n  computedInternal,\n  mobxComputed\n) as any;\n\nfunction observableInternal(...args) {\n  return (mobxObservable as any)(...args);\n}\n\nexport const observable: typeof mobxObservable = Object.assign(\n  observableInternal,\n  mobxObservable\n) as any;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}