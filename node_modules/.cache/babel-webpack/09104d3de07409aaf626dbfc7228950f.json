{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nimport { Injectable } from '@angular/core';\n\nvar TreeDraggedElement =\n/** @class */\nfunction () {\n  function TreeDraggedElement() {\n    this._draggedElement = null;\n  }\n\n  TreeDraggedElement.prototype.set = function (draggedElement) {\n    this._draggedElement = draggedElement;\n  };\n\n  TreeDraggedElement.prototype.get = function () {\n    return this._draggedElement;\n  };\n\n  TreeDraggedElement.prototype.isDragging = function () {\n    return !!this.get();\n  };\n\n  TreeDraggedElement.ɵfac = function TreeDraggedElement_Factory(t) {\n    return new (t || TreeDraggedElement)();\n  };\n\n  TreeDraggedElement.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n    token: TreeDraggedElement,\n    factory: function factory(t) {\n      return TreeDraggedElement.ɵfac(t);\n    }\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(TreeDraggedElement, [{\n      type: Injectable\n    }], function () {\n      return [];\n    }, null);\n  })();\n\n  return TreeDraggedElement;\n}();\n\nexport { TreeDraggedElement };","map":{"version":3,"sources":["../../lib/models/tree-dragged-element.model.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,SAAS,UAAT,QAA2B,eAA3B;;AAGA,IAAA,kBAAA;AAAA;AAAA,YAAA;AADA,WAAA,kBAAA,GAAA;AAEE,SAAA,eAAA,GAAuB,IAAvB;AAaD;;AAXC,EAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,UAAI,cAAJ,EAAuB;AACrB,SAAK,eAAL,GAAuB,cAAvB;AACD,GAFD;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,GAAA,GAAA,YAAA;AACE,WAAO,KAAK,eAAZ;AACD,GAFD;;AAIA,EAAA,kBAAA,CAAA,SAAA,CAAA,UAAA,GAAA,YAAA;AACE,WAAO,CAAC,CAAC,KAAK,GAAL,EAAT;AACD,GAFD;;AAXW,EAAA,kBAAA,CAAA,IAAA,GAAkB,SAD9B,0BAC8B,CADlB,CACkB,EADlB;AACA,WAAA,KAAA,CAAA,IAAkB,kBAAlB,GAAA;AAcZ,GAdY;;;;;;;;;;;;;;;;AAeb,G;;AADA,SAAA,kBAAA;AAAC,CAdD,EAAA;;AAeA,SAfa,kBAeb","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class TreeDraggedElement {\n  _draggedElement: any = null;\n\n  set(draggedElement: any) {\n    this._draggedElement = draggedElement;\n  }\n\n  get(): any {\n    return this._draggedElement;\n  }\n\n  isDragging() {\n    return !!this.get();\n  }\n}\n"]},"metadata":{},"sourceType":"module"}