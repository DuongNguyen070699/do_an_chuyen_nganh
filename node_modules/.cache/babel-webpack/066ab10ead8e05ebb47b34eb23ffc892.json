{"ast":null,"code":"import * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from './tree-node-expander.component';\nimport * as ɵngcc3 from '../directives/tree-drag.directive';\nimport * as ɵngcc4 from '../directives/tree-drop.directive';\nimport * as ɵngcc5 from './tree-node-content.component';\nimport * as ɵngcc6 from './tree-node-checkbox.component';\n\nfunction TreeNodeWrapperComponent_div_0_tree_node_checkbox_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"tree-node-checkbox\", 4);\n  }\n\n  if (rf & 2) {\n    var ctx_r1 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r1.node);\n  }\n}\n\nfunction TreeNodeWrapperComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r3 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, TreeNodeWrapperComponent_div_0_tree_node_checkbox_1_Template, 1, 1, \"tree-node-checkbox\", 3);\n    ɵngcc0.ɵɵelement(2, \"tree-node-expander\", 4);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function TreeNodeWrapperComponent_div_0_Template_div_click_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r2 = ɵngcc0.ɵɵnextContext();\n      return ctx_r2.node.mouseAction(\"click\", $event);\n    })(\"dblclick\", function TreeNodeWrapperComponent_div_0_Template_div_dblclick_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r4 = ɵngcc0.ɵɵnextContext();\n      return ctx_r4.node.mouseAction(\"dblClick\", $event);\n    })(\"mouseover\", function TreeNodeWrapperComponent_div_0_Template_div_mouseover_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.node.mouseAction(\"mouseOver\", $event);\n    })(\"mouseout\", function TreeNodeWrapperComponent_div_0_Template_div_mouseout_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext();\n      return ctx_r6.node.mouseAction(\"mouseOut\", $event);\n    })(\"contextmenu\", function TreeNodeWrapperComponent_div_0_Template_div_contextmenu_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext();\n      return ctx_r7.node.mouseAction(\"contextMenu\", $event);\n    })(\"treeDrop\", function TreeNodeWrapperComponent_div_0_Template_div_treeDrop_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r8 = ɵngcc0.ɵɵnextContext();\n      return ctx_r8.node.onDrop($event);\n    })(\"treeDropDragOver\", function TreeNodeWrapperComponent_div_0_Template_div_treeDropDragOver_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n      return ctx_r9.node.mouseAction(\"dragOver\", $event);\n    })(\"treeDropDragLeave\", function TreeNodeWrapperComponent_div_0_Template_div_treeDropDragLeave_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r10 = ɵngcc0.ɵɵnextContext();\n      return ctx_r10.node.mouseAction(\"dragLeave\", $event);\n    })(\"treeDropDragEnter\", function TreeNodeWrapperComponent_div_0_Template_div_treeDropDragEnter_3_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r3);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.node.mouseAction(\"dragEnter\", $event);\n    });\n    ɵngcc0.ɵɵelement(4, \"tree-node-content\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"padding-left\", ctx_r0.node.getNodePadding());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.node.options.useCheckbox);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r0.node);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"node-content-wrapper-active\", ctx_r0.node.isActive)(\"node-content-wrapper-focused\", ctx_r0.node.isFocused);\n    ɵngcc0.ɵɵproperty(\"treeAllowDrop\", ctx_r0.node.allowDrop)(\"allowDragoverStyling\", ctx_r0.node.allowDragoverStyling())(\"treeDrag\", ctx_r0.node)(\"treeDragEnabled\", ctx_r0.node.allowDrag());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"node\", ctx_r0.node)(\"index\", ctx_r0.index)(\"template\", ctx_r0.templates.treeNodeTemplate);\n  }\n}\n\nvar _c0 = function _c0(a0, a1, a2, a3) {\n  return {\n    $implicit: a0,\n    node: a1,\n    index: a2,\n    templates: a3\n  };\n};\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { TreeNode } from '../models/tree-node.model';\n\nvar TreeNodeWrapperComponent =\n/** @class */\nfunction () {\n  function TreeNodeWrapperComponent() {}\n\n  __decorate([Input(), __metadata(\"design:type\", TreeNode)], TreeNodeWrapperComponent.prototype, \"node\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Number)], TreeNodeWrapperComponent.prototype, \"index\", void 0);\n\n  __decorate([Input(), __metadata(\"design:type\", Object)], TreeNodeWrapperComponent.prototype, \"templates\", void 0);\n\n  TreeNodeWrapperComponent = __decorate([__metadata(\"design:paramtypes\", [])], TreeNodeWrapperComponent);\n\n  TreeNodeWrapperComponent.ɵfac = function TreeNodeWrapperComponent_Factory(t) {\n    return new (t || TreeNodeWrapperComponent)();\n  };\n\n  TreeNodeWrapperComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n    type: TreeNodeWrapperComponent,\n    selectors: [[\"tree-node-wrapper\"]],\n    inputs: {\n      node: \"node\",\n      index: \"index\",\n      templates: \"templates\"\n    },\n    decls: 2,\n    vars: 8,\n    consts: [[\"class\", \"node-wrapper\", 3, \"padding-left\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"node-wrapper\"], [3, \"node\", 4, \"ngIf\"], [3, \"node\"], [1, \"node-content-wrapper\", 3, \"treeAllowDrop\", \"allowDragoverStyling\", \"treeDrag\", \"treeDragEnabled\", \"click\", \"dblclick\", \"mouseover\", \"mouseout\", \"contextmenu\", \"treeDrop\", \"treeDropDragOver\", \"treeDropDragLeave\", \"treeDropDragEnter\"], [3, \"node\", \"index\", \"template\"]],\n    template: function TreeNodeWrapperComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, TreeNodeWrapperComponent_div_0_Template, 5, 15, \"div\", 0);\n        ɵngcc0.ɵɵelementContainer(1, 1);\n      }\n\n      if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.templates.treeNodeWrapperTemplate);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.templates.treeNodeWrapperTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(3, _c0, ctx.node, ctx.node, ctx.index, ctx.templates));\n      }\n    },\n    directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet, ɵngcc2.TreeNodeExpanderComponent, ɵngcc3.TreeDragDirective, ɵngcc4.TreeDropDirective, ɵngcc5.TreeNodeContent, ɵngcc6.TreeNodeCheckboxComponent],\n    encapsulation: 2\n  });\n  /*@__PURE__*/\n\n  (function () {\n    ɵngcc0.ɵsetClassMetadata(TreeNodeWrapperComponent, [{\n      type: Component,\n      args: [{\n        selector: 'tree-node-wrapper',\n        encapsulation: ViewEncapsulation.None,\n        styles: [],\n        template: \"\\n      <div *ngIf=\\\"!templates.treeNodeWrapperTemplate\\\" class=\\\"node-wrapper\\\" [style.padding-left]=\\\"node.getNodePadding()\\\">\\n          <tree-node-checkbox *ngIf=\\\"node.options.useCheckbox\\\" [node]=\\\"node\\\"></tree-node-checkbox>\\n          <tree-node-expander [node]=\\\"node\\\"></tree-node-expander>\\n          <div class=\\\"node-content-wrapper\\\"\\n               [class.node-content-wrapper-active]=\\\"node.isActive\\\"\\n               [class.node-content-wrapper-focused]=\\\"node.isFocused\\\"\\n               (click)=\\\"node.mouseAction('click', $event)\\\"\\n               (dblclick)=\\\"node.mouseAction('dblClick', $event)\\\"\\n               (mouseover)=\\\"node.mouseAction('mouseOver', $event)\\\"\\n               (mouseout)=\\\"node.mouseAction('mouseOut', $event)\\\"\\n               (contextmenu)=\\\"node.mouseAction('contextMenu', $event)\\\"\\n               (treeDrop)=\\\"node.onDrop($event)\\\"\\n               (treeDropDragOver)=\\\"node.mouseAction('dragOver', $event)\\\"\\n               (treeDropDragLeave)=\\\"node.mouseAction('dragLeave', $event)\\\"\\n               (treeDropDragEnter)=\\\"node.mouseAction('dragEnter', $event)\\\"\\n               [treeAllowDrop]=\\\"node.allowDrop\\\"\\n               [allowDragoverStyling]=\\\"node.allowDragoverStyling()\\\"\\n               [treeDrag]=\\\"node\\\"\\n               [treeDragEnabled]=\\\"node.allowDrag()\\\">\\n\\n              <tree-node-content [node]=\\\"node\\\" [index]=\\\"index\\\" [template]=\\\"templates.treeNodeTemplate\\\">\\n              </tree-node-content>\\n          </div>\\n      </div>\\n      <ng-container\\n              [ngTemplateOutlet]=\\\"templates.treeNodeWrapperTemplate\\\"\\n              [ngTemplateOutletContext]=\\\"{ $implicit: node, node: node, index: index, templates: templates }\\\">\\n      </ng-container>\\n  \"\n      }]\n    }], function () {\n      return [];\n    }, {\n      node: [{\n        type: Input\n      }],\n      index: [{\n        type: Input\n      }],\n      templates: [{\n        type: Input\n      }]\n    });\n  })();\n\n  return TreeNodeWrapperComponent;\n}();\n\nexport { TreeNodeWrapperComponent };","map":{"version":3,"sources":["../../lib/components/tree-node-wrapper.component.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAS,SAAT,EAAqB,KAArB,EAA6B,iBAA7B,QAAoE,eAApE;AACA,SAAS,QAAT,QAAyB,2BAAzB;;AAsCA,IAAA,wBAAA;AAAA;AAAA,YAAA;AAME,WAAA,wBAAA,GAAA,CACC;;AALQ,EAAA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAK,QAAL,CAAD,CAAA,EACX,wBAAA,CAAA,SADW,EACX,MADW,EACX,KAD0B,CAAf,CAAA;;AACA,EAAA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAGX,wBAAA,CAAA,SAHW,EAGX,OAHW,EAGX,KAHyB,CAAd,CAAA;;AACA,EAAA,UAAA,CAAA,CAAR,KAAK,EAAG,EAAC,UAAA,CAAA,aAAA,EAAA,MAAA,CAAD,CAAA,EAMV,wBAAA,CAAA,SANU,EAMV,WANU,EAMV,KANyB,CAAf,CAAA;;AAJE,EAAA,wBAAwB,GAAA,UAAA,CAA9B,CApCN,UAAA,CAAA,mBAAA,EACC,EADD,CAoCM,CAA8B,EAnCN,wBAmCM,CAAxB;;AAlCX,EAAA,wBAAe,CAAA,IAAf,GAAe,SAAkB,gCAAlB,CACL,CADK,EACL;AAAA,WACV,KAAU,CAAA,IAAA,wBAAV,GADU;AACA,GAFV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;kBA+BC;;;;;;;;;;;;;;;AAaH,G;;AADA,SAAA,wBAAA;AAAC,CATD,EAAA;;AAUA,SAVa,wBAUb","sourcesContent":["import { Component , Input , ViewEncapsulation , TemplateRef } from '@angular/core';\nimport { TreeNode } from '../models/tree-node.model';\n\n@Component({\n  selector: 'tree-node-wrapper' ,\n  encapsulation: ViewEncapsulation.None ,\n  styles: [] ,\n  template: `\n      <div *ngIf=\"!templates.treeNodeWrapperTemplate\" class=\"node-wrapper\" [style.padding-left]=\"node.getNodePadding()\">\n          <tree-node-checkbox *ngIf=\"node.options.useCheckbox\" [node]=\"node\"></tree-node-checkbox>\n          <tree-node-expander [node]=\"node\"></tree-node-expander>\n          <div class=\"node-content-wrapper\"\n               [class.node-content-wrapper-active]=\"node.isActive\"\n               [class.node-content-wrapper-focused]=\"node.isFocused\"\n               (click)=\"node.mouseAction('click', $event)\"\n               (dblclick)=\"node.mouseAction('dblClick', $event)\"\n               (mouseover)=\"node.mouseAction('mouseOver', $event)\"\n               (mouseout)=\"node.mouseAction('mouseOut', $event)\"\n               (contextmenu)=\"node.mouseAction('contextMenu', $event)\"\n               (treeDrop)=\"node.onDrop($event)\"\n               (treeDropDragOver)=\"node.mouseAction('dragOver', $event)\"\n               (treeDropDragLeave)=\"node.mouseAction('dragLeave', $event)\"\n               (treeDropDragEnter)=\"node.mouseAction('dragEnter', $event)\"\n               [treeAllowDrop]=\"node.allowDrop\"\n               [allowDragoverStyling]=\"node.allowDragoverStyling()\"\n               [treeDrag]=\"node\"\n               [treeDragEnabled]=\"node.allowDrag()\">\n\n              <tree-node-content [node]=\"node\" [index]=\"index\" [template]=\"templates.treeNodeTemplate\">\n              </tree-node-content>\n          </div>\n      </div>\n      <ng-container\n              [ngTemplateOutlet]=\"templates.treeNodeWrapperTemplate\"\n              [ngTemplateOutletContext]=\"{ $implicit: node, node: node, index: index, templates: templates }\">\n      </ng-container>\n  `\n})\n\nexport class TreeNodeWrapperComponent {\n\n  @Input() node: TreeNode;\n  @Input() index: number;\n  @Input() templates: any;\n\n  constructor() {\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}